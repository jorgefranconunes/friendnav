2012/06/02

Resumo:

1. 





UserNodeCache

get ( userNodeId )

push ( userNode )

pop ()

getCurrent ()

setFriendsList ( userNodeId, userNodeList )

getFriendsList ( userNodeId )





2012/05/30

Resumo:

1. 





Javascript libs for drawing graphs:

https://github.com/jackrusher/jssvggraph - Very simple and basic. It
might just be enough. (Not really. Nodes can only be text. This is
just a proof-of-concept.)

http://arborjs.org/

http://thejit.org/ - Even better!

https://github.com/mbostock/d3/wiki/Gallery (http://d3js.org/) - The
best?





2012/05/25

Resumo:

1. 





class FriendsBrowserPageController

setInitialUserNode ( userNode )


class FriendsBrowserPageView

setInitialUserNode ( userNode )


class UserNodeDetailView

setUserNode ( userNode )





2012/05/05

Resumo:

1. 





Javascript library for managing cookies: http://code.google.com/p/cookies/





2012/05/01

Resumo:

1. 





Documentation on obtaining the current document URL:
https://developer.mozilla.org/En/DOM/Window.location#Location%5Fobject


To obtain the current URL, without hash:

var location = window.location;
var url      = location.protocol + "//" + location.host + location.pathname;





2012/04/30

Resumo:

1. Analysis on authentication using Foursquare.





Authentication on Foursquare with OAuth2

Documentation on the Foursquare API:
https://developer.foursquare.com/overview/

The purpose of the authentication is to obtain the access token. This
access token is needed when making requests (invoking operations) on
the Foursquare API.


Preparation

A "CLIENT_ID" needs to be obtained from Foursquare. Just go to and
register the dev environment application.

Client ID    : YWDNHROEVRQYDVY0QMFEBANSS43AMHPALDB3Z31HRX3KLAP3
Callback url : http://localhost/friendnav/fnav/index.html

This Client ID is actually used by Foursquare as a unique identifier
of our application.


Obtaining the access token

https://foursquare.com/oauth2/authenticate
?client_id=YWDNHROEVRQYDVY0QMFEBANSS43AMHPALDB3Z31HRX3KLAP3
&response_type=token
&redirect_uri=http:%2f%2flocalhost%2ffriendnav%2ffnav%2findex.html

If the user accepts the browser will get redirected to
http://localhost/friendnav/fnav/index.html#access_token=ACCESS_TOKEN

If the user does not accept the browser will ge redirected to
http://localhost/friendnav/fnav/index.html (*** we need to confirm
this ***).


When the application starts one of the following scenarios will occur:

* The URL has no "access_token" hash and the user has not logged in -
  The pre-login page is displayed.

* The URL has no "access_token" hash and the user has already logged
  in - The post-login page is displayed.

* The URL has the "access_token" hash and it does not matter if the
  user has already logged in - The access token is stored for later
  use when invoking Foursquare web services. The post-login page is
  displayed. The URL on the browser should also be changed to not
  contain the hash.





2012/04/14

Resumo:

1. 





cd .../friendnav
git init
git config user.name jorgefranconunes
git config user.email jorgefranconunes@gmail.com
git remote add origin git@github.com:jorgefranconunes/friendnav.git
git push -u origin master





http://git-scm.com/course/svn.html


yum install git-svn


cat > .../authors.txt <<EOF
jfn = jorgefranconunes <jorgefranconunes@gmail.com>
EOF

git svn clone \
    --authors-file=.../authors.txt \
    --stdlayout \
    svn+ssh://ssh.pdmfc.com/home/jfn/svn/math mathstuff
cd ./mathstuff
git config user.name jorgefranconunes
git config user.email jorgefranconunes@gmail.com
git remote add origin git@github.com:jorgefranconunes/mathstuff.git
git push -u origin master





2012/04/13

Resumo:

1. Some analysis work.





https://apigee.com/console/ - apigee console for interacting with
multiple APIs. Very usefull for learning the APIs.





The goal of this project is to create an application for navigating
the network of nodes (friends) in a social network.

There are two main panels in the application:

* Friend list panel - Shows the neighbour nodes of the currently
  selected node.

* Friend map panel - Shows in a map the predecessors of the current
  node, the current node, the neighbours of the current node.





Friend list panel

Shows the following:

* Details of the currently selected node. When the aplication starts,
  the first selected node is the user herself.

* List of neighbours of the current node.

Available actions:

* Select item on the list of neighbours. The selected item becomes the
  currently selected node.

* Back - The current node is set to the previous current node. That
  is, the predecessor of the current node becomes the current node.





Friend map panel

Shows a map with two sets of markers.

* The predecessors of the current node and the current node. These
  markers are connected with a line, starting on the initial node and
  ending on the current node.

* The neighbours of the current node. Each of these markers is
  connected with a line to the marker for the current node.

Each marker is displayed as an icon with the image of the
corresponding node

Available actions:

* Select marker on map. The node corresponding to the marker becomes
  the currently selected node.





Data model


Node - Represents a user of the social network.

Attributes:

* ID - Node unique ID.

* Name

* Image

* Geo location (latitude, longitude).

* Town.

* Country.





Social networks to be supported:

* Foursquare

* Twitter

* Facebook

* Google+





* Authentication

* API to abstract the underlying social network API. It will need to
  handle asynchronous operations.

* ???

